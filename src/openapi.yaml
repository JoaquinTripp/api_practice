openapi: 3.1.1
info:
  title: My first API
  version: 1.0.0
  description: This is an example OpenAPI specification for demonstration purposes.
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /hello:
    get:
      summary: Hello world
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
  /goodbye:
    get:
      summary: Goodbye world
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodbyeResponse'
  /greet:
    get:
      summary: Greet the user
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A personalized greeting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetResponse'
  /users:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'   
components:
  schemas:
    HelloResponse:
      type: object
      properties:
        message:
          type: string
          example: Hello, world!
    GoodbyeResponse:
      type: object
      properties:
        message:
          type: string
          example: Goodbye, world!
    GreetResponse:
      type: object
      properties:
        message:
          type: string
          example: Hello, {name}!
        description:
          type: string
          example: This endpoint greets the user with their name.
    User:
      type: object
      required:
        - name
        - age
        - email
      properties:
        name:
          type: string
          minLength: 2
        age:
          type: integer
          minimum: 18
        email:
          type: string
          format: email
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
        email:
          type: string
